version: "3"
services:
    namenode:
        build:
            dockerfile: Dockerfile_namenode
        container_name: namenode
        restart: always
        volumes:
            - ${HODOOP_VOLUME_HOME}/hadoop_namenode:/hadoop/dfs/name
            - ${REPOSITORY_HOME}:/home/hadoop/git
            - ${EXTERNAL_DATA}:/home/hadoop/ext_dataset
        environment:
            - CLUSTER_NAME=test
        ports:
            - 9870:9870
            - 9000:9000
            - 20022:22
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${NAMENODE_HOST}

    datanode1:
        image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
        container_name: datanode1
        restart: always
        depends_on:
            - namenode
        volumes:
            - ${HODOOP_VOLUME_HOME}/hadoop_datanode1:/hadoop/dfs/data
        environment:
            SERVICE_PRECONDITION: "namenode:9870"
        ports:
            - 9864:9864
            - 21022:22
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${DATANODE1_HOST}

    datanode2:
        image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
        container_name: datanode2
        restart: always
        depends_on:
            - namenode
        volumes:
            - ${HODOOP_VOLUME_HOME}/hadoop_datanode2:/hadoop/dfs/data
        environment:
            SERVICE_PRECONDITION: "namenode:9870"
        ports:
            - 9865:9864
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${DATANODE2_HOST}

    datanode3:
        image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
        container_name: datanode3
        restart: always
        depends_on:
            - namenode
        volumes:
            - ${HODOOP_VOLUME_HOME}/hadoop_datanode3:/hadoop/dfs/data
        environment:
            SERVICE_PRECONDITION: "namenode:9870"
        ports:
            - 9866:9864
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${DATANODE3_HOST}

    resourcemanager:
        image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
        container_name: resourcemanager
        restart: always
        environment:
            SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864"
        ports:
            - 8088:8088
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${RESOURCE_MANAGER_HOST}

    nodemanager:
        image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
        container_name: nodemanager
        restart: always
        environment:
            SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 resourcemanager:8088"
        ports:
            - 8042:8042
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${NODE_MANAGER_HOST}

    historyserver:
        image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
        container_name: historyserver
        restart: always
        environment:
            SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 resourcemanager:8088"
        volumes:
            - ${HODOOP_VOLUME_HOME}/hadoop_historyserver:/hadoop/yarn/timeline
        ports:
            - 8188:8188
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${HISTORY_SERVER_HOST}

    hive-server:
        image: bde2020/hive:2.3.2-postgresql-metastore
        container_name: hive-server
        restart: always
        depends_on:
            - namenode
            - datanode1
            - datanode2
            - datanode3
        environment:
            HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
        ports:
            - 10000:10000
            - 10002:10002
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${HIVE_SERVER_HOST}

    hive-metastore:
        image: bde2020/hive:2.3.2-postgresql-metastore
        container_name: hive-metastore
        restart: always
        environment:
            SERVICE_PRECONDITION: "namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 hive-metastore-postgresql:5432"
        command: /opt/hive/bin/hive --service metastore
        ports:
            - 9083:9083
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${HIVE_METASTORE_HOST}

    hive-metastore-postgresql:
        image: bde2020/hive-metastore-postgresql:2.3.0
        container_name: hive-metastore-postgresql
        volumes:
            - ${HODOOP_VOLUME_HOME}/hive_metastore:/var/lib/postgresql/data
        networks:
            shared-network:
                ipv4_address: ${HIVE_METASTORE_POSTGRESQL_HOST}

    spark-master:
        build:
            dockerfile: Dockerfile_spark_base
        container_name: spark-master
        ports:
        - 8080:8080
        - 7077:7077
        - 4040:4040
        environment:
        - SPARK_LOCAL_IP=spark-master
        - SPARK_WORKLOAD=master
        - INIT_DAEMON_STEP=setup_spark
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${SPARK_MASTER_HOST}
                
    spark-worker-1:
        build:
            dockerfile: Dockerfile_spark_base
        container_name: spark-worker-1
        ports:
        - 8081:8081
        - 9091:8080
        - 7000:7000
        env_file:
            - ./hadoop.env
        depends_on:
        - spark-master
        environment:
        - SPARK_MASTER=spark://spark-master:7077
        - SPARK_WORKER_CORES=2
        - SPARK_WORKER_MEMORY=10G
        - SPARK_DRIVER_MEMORY=10G
        - SPARK_EXECUTOR_MEMORY=10G
        - SPARK_WORKLOAD=worker
        - SPARK_LOCAL_IP=spark-worker-1
        networks:
            shared-network:
                ipv4_address: ${SPARK_WORKER1_HOST}

    spark-worker-2:
        build:
            dockerfile: Dockerfile_spark_base
        container_name: spark-worker-2
        ports:
        - 8082:8081
        - 9092:8080
        - 7001:7000
        env_file:
            - ./hadoop.env
        depends_on:
        - spark-master
        environment:
        - SPARK_MASTER=spark://spark-master:7077
        - SPARK_WORKER_CORES=2
        - SPARK_WORKER_MEMORY=10G
        - SPARK_DRIVER_MEMORY=10G
        - SPARK_EXECUTOR_MEMORY=10G
        - SPARK_WORKLOAD=worker
        - SPARK_LOCAL_IP=spark-worker-2
        networks:
            shared-network:
                ipv4_address: ${SPARK_WORKER2_HOST}

    spark-history-server:
        image: bambrow/spark-history-server:3.1.1-hadoop3.2
        container_name: spark-history-server
        depends_on:
            - spark-master
        ports:
            - 18080:18080
        env_file:
            - ./hadoop.env
        networks:
            shared-network:
                ipv4_address: ${SPARK_HISTORY_SERVER_HOST}

networks:
    shared-network:
        external: true
